@using static EmployeeManagement.Enums.EnumTypes
@model IEnumerable<EmployeeManagement.DTOs.LeaveRequestGetDTO>
@{
    int currentPage = ViewBag.CurrentPage;
    int pageSize = ViewBag.PageSize;
    int totalRequests = ViewBag.TotalRequests;
    int totalPages = (int)Math.Ceiling((double)totalRequests / pageSize);
}

<h2 class="text-center">List of LeaveRequests and Employees</h2>
<br />

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

<table class="table table-striped table-bordered">
    <thead class="thead-dark">
        <tr>
            <th class="text-center">Name of the Employee</th>
            <th class="text-center">Email</th>
            <th class="text-center">Annual Leave Days Remaining</th>
            <th class="text-center">Bonus Leave Days Remaining</th>
            <th class="text-center">StartDate</th>
            <th class="text-center">EndDate</th>
            <th class="text-center">Comments</th>
            <th class="text-center">LeaveType</th>
            <th class="text-center">LeaveStatus</th>
            <th class="text-center">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var request in Model)
        {
            <tr class="@(request.LeaveStatus == LeaveStatus.Approved ? "bg-lightblue" :
            request.LeaveStatus == LeaveStatus.Rejected ? "bg-lightcoral" : "")">
                <td class="text-center">@request.Employee.Name</td>
                <td class="text-center">@request.Employee.Email</td>
                <td class="text-center">@request.Employee.AnnualLeaveDaysRemaining</td>
                <td class="text-center">@request.Employee.BonusLeaveDaysRemaining</td>
                <td class="text-center">@request.StartDate.ToShortDateString()</td>
                <td class="text-center">@request.EndDate.ToShortDateString()</td>
                <td class="text-center">@request.Comment</td>
                <td class="text-center">@request.LeaveType</td>

                <!--<td class="text-center @(request.LeaveStatus == LeaveStatus.Pending ? "bg-secondary text-white" : "")">
                    @request.LeaveStatus
                </td>-->
                <td class="text-center">
                    <span class="@(request.LeaveStatus == LeaveStatus.Pending ? "badge bg-secondary fw-bold p-1" : "")">
                        @request.LeaveStatus
                    </span>
                </td>

                <td class="text-center">
                    @if (User.IsInRole("Hr") && request.LeaveStatus == LeaveStatus.Pending)
                    {
                        <a asp-action="Approve" asp-route-id="@request.LeaveRequestId" asp-route-page="@ViewBag.CurrentPage" class="btn btn-primary btn-sm">Approve</a>
                        <a asp-action="Decline" asp-route-id="@request.LeaveRequestId" asp-route-page="@ViewBag.CurrentPage" class="btn btn-danger btn-sm">Decline</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        @if (currentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-action="AllRequests" asp-route-page="@(currentPage - 1)" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }
        @for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item @(i == currentPage ? "active" : "")">
                <a class="page-link" asp-action="AllRequests" asp-route-page="@i">@i</a>
            </li>
        }
        @if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-action="AllRequests" asp-route-page="@(currentPage + 1)" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
    </ul>
</nav>